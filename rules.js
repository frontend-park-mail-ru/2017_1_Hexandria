// Константы обновления карты
ПРИРОСТ_ВОЙСК_ЗА_ХОД_В_СТОЛИЦЕ = 15;
ПРИРОСТ_ВОЙСК_ЗА_ХОД_В_ГОРОДЕ = 10;
УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ПРОСТОЙ = 5;

// Константы боёвки
УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ = 1;
УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ = 1;
КОЭФФИЦИЕНТ_МОРАЛИ = 0.1

// Константы захвата
УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ЗАХВАТ_СТОЛИЦЫ_ЮНИТ = 50
УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ЗАХВАТ_СТОЛИЦЫ_ОСТАЛЬНЫЕ = 30
УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ЗАХВАТ_ГОРОДА_ЮНИТ = 20
УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ЗАХВАТ_ГОРОДА_ОСТАЛЬНЫЕ = 10
УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ЗАХВАТ_ПОРТА_ЮНИТ = 10
УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ЗАХВАТ_ПОРТА_ОСТАЛЬНЫЕ = 5
УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ЗАХВАТ_ХЕКСА_ЮНИТ = 1

УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ПОТЕРЮ_СТОЛИЦЫ = 30
УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ПОТЕРЮ_ГОРОДА = 10
УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ПОТЕРЮ_ПОРТА = 5

while(есть игроки) {

    // Обновления на карте
    for(столица : столицы) {
        if(столица кому-то принадлежит) {
            увеличиваем количество войск на ПРИРОСТ_ВОЙСК_ЗА_ХОД_В_СТОЛИЦЕ
        }
    }
    for(город : города) {
        if(город кому-то принадлежит) {
            увеличиваем количество войск на ПРИРОСТ_ВОЙСК_ЗА_ХОД_В_ГОРОДЕ
        }
    }
    for(юнит : юниты) {
        if(юнит не двигался) {
            юнит.мораль -= УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ПРОСТОЙ
        }
    }

    // Принятие решений игроками
    for(игрок : игроки) {
        // Один игрок делает ход
        while(время на ход не истекло) {

        }
    }
}

//======================================================================================================

function захват(юнит_захватчик, поле) {
    if(поле.есть_юнит && юнит_захватчик.игрок !== поле.юнит.игрок) {
        бой(юнит_захватчик, поле.войско)
    }
}

//=======================================================================================================

function бой(юнит_атака, юнит_защита) {
    сила_атака = юнит_атака.количество * юнит_атака.мораль * КОЭФФИЦИЕНТ_МОРАЛИ
    сила_защита = юнит_защита.количество * юнит_защита.мораль * КОЭФФИЦИЕНТ_МОРАЛИ
    if(сила_атака > сила_защита) {
        колво_оставшихся_войск = (сила_атака - сила_защита) / (юнит_атака.мораль * КОЭФФИЦИЕНТ_МОРАЛИ)
        for(юнит : игрок_атака.юниты) {
            убито = юнит_защита.количество / 10
            потери = (юнит_атака.количество - колво_оставшихся_войск) / 10
            юнит.мораль += (убито * УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ) - (потери * УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ)
        }
        for(юнит : игрок_защита.юниты) {
            убито = (юнит_атака.количество - колво_оставшихся_войск) / 10
            потери = юнит_защита.количество / 10
            юнит.мораль += (убито * УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ) - (потери * УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ)
        }
        юнит_атака.количество = колво_оставшихся_войск
        игрок_защита.удалить(юнит_защита)
        юнит_атака.переместить(юнит_защита.поле)
        return true;
    } else {
        колво_оставшихся_войск = (сила_защита - сила_атака) / (юнит_защита.мораль * КОЭФФИЦИЕНТ_МОРАЛИ)
        for(юнит : игрок_защита.юниты) {
            убито = юнит_атака.количество / 10
            потери = (юнит_защита.количество - колво_оставшихся_войск) / 10
            юнит.мораль += (убито * УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ) - (потери * УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ)
        }
        for(юнит : игрок_атака.юниты) {
            убито = (юнит_защита.количество - колво_оставшихся_войск) / 10
            потери = юнит_атака.количество / 10
            юнит.мораль += (убито * УВЕЛИЧЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ) - (потери * УМЕНЬШЕНИЕ_МОРАЛИ_ЗА_ДЕСЯТОК_УБИТЫХ)
        }
        юнит_защита.количество = колво_оставшихся_войск
        игрок_атака.удалить(юнит_атака)
        return false;
    }
}